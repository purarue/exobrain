#!/bin/bash
# This builds the markdown files into HTML files.
# It also dymanically generates the sitemap and blog feed pages
# by using the post directory for blogposts, and parsing
# the 'Title' attribute from each page to generate markdown
# and putting those in ./sitemap/README.md and ./feed/README.md
# before running pandoc against them
# This runs pandoc by searching for README.md files recursively
# and running pandoc against that with the assets/template.html as a base

cd "$(dirname "${BASH_SOURCE[0]}")" || exit

# get my list of projects
mkdir -p ./projects
curl -s "https://raw.githubusercontent.com/seanbreckenridge/projects/master/README.md" >./projects/README.md
 
mkmanifest() {
	declare line
	while IFS= read -r line; do
		line=${line#./}
		[[ "$line" == . ]] && continue
		echo "$line"
	done <<<"$(find . -name 'README.md' -printf "%h\n" | sort -d)" >MANIFEST
}

# converts $1 to $2 using pandoc
pandoc_generate() {
	pandoc -s -o "$2" --quiet --template=assets/template.html "$1"
}

render() {
	declare dir="$1"
	echo Building "'$dir'"
	pandoc_generate "$dir/README.md" "$dir/index.html"
}

# create sitemap-like index page
cat ./sitemap/BASE.md >./sitemap/README.md
echo >>./sitemap/README.md

# generate markdown that displays the sitemap
{ while read -r indexdir; do
	full_dir=$(echo -n "$indexdir" | cut -c 2- | tr -d "\n")
	without_last_dir=$(dirname "$full_dir")
	page_title=$(grep -m1 Title "$indexdir/README.md" | cut -d" " -f2- | tr -d "\n")
	absolute_path=$(cut -c 2- <<<"$indexdir")
	printf "* %s/ [%s](%s)\n" "${without_last_dir#/}" "$page_title" "$absolute_path"
	# sort by columns (directory name and then name of post
done < <(find . -name "README.md" | grep -vE "^(./sitemap|./post|./feed|./README.md)" | sed "s/README.md$//g"); } \
  | sort -k2,2 -k3,3 >>./sitemap/README.md

# create feed (blog) page
cat ./feed/BASE.md >./feed/README.md
echo >>./feed/README.md

# generate markdown that displays blog feed
{ while read -r indexdir; do
	# grab title and date from yaml at top
	blog_title=$(grep -m1 Title "$indexdir/README.md" | cut -d" " -f2- | tr -d "\n")
	blog_date=$(grep -m1 Date "$indexdir/README.md" | cut -d" " -f2- | tr -d "\n")
	absolute_path=$(cut -c 2- <<<"$indexdir")
	printf "* [%s](%s) %s\n" "$blog_title" "$absolute_path" "$blog_date"
done< <(find ./post -name "README.md" | sed "s/README.md$//g" ); } \
  | python -c "import sys; print(''.join(sorted(sys.stdin.readlines(), key=lambda l: l.split()[-1], reverse=True)))" >>./feed/README.md
  # python expression sort lines by last column

# make manifest
mkmanifest
# render home page
render "."
# generate 404 page
pandoc_generate "./404.md" "./404.html"

# list of pids for background processes
while IFS= read -r node; do
	render "$node" &
done <./MANIFEST
wait
