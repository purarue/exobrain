#!/bin/bash

declare OPEN_URL LINKS_SEARCH THIS_DIR
THIS_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
cd "$THIS_DIR" || {
	printf "Couldn't 'cd' to '%s'\n" "$THIS_DIR"
	exit 1
}

OPEN_URL=0
LINKS_SEARCH=0
while getopts "oh" opt; do
	case $opt in
	o)
		# searching for links should automatically open in browser
		OPEN_URL=1
		LINKS_SEARCH=1
		;;
	h)
		go run ./search.go -help
		printf "\nThis wrapper script handles/wraps the 'internal' search.go flags\n"
		printf "Pass the -o flag to search for links instead\n"
		exit 0
		;;
	\?)
		echo "Invalid option provided. Run $0 -h for help" >&2
		exit 1
		;;
	*)
		echo "Unknown argument: $OPTARG" >&2
		exit 1
		;;
	esac
done

run_search() {
	local -a search_cmd=()
	search_cmd=(run ./search.go -exobrain-dir "$THIS_DIR")
	((LINKS_SEARCH)) && search_cmd+=(-links -url)
	go "${search_cmd[@]}"
	return $?
}

if ((OPEN_URL)); then
	# my cross-platform open url/clipcopy scripts
	# https://sean.fish/d/openurl?dark
	# https://sean.fish/d/clipcopy?dark
	URL="$(run_search)" || exit $?
	[[ -z "$URL" ]] && exit 1
	printf '%s' "$URL" | clipcopy
	printf '%s' "$URL" | openurl
else
	run_search || exit $?
fi
