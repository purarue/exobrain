#!/bin/bash

havecmd() {
	local BINARY ERRMSG
	# error if first argument isn't provided
	BINARY="${1:?Must provide command to check}"
	# the commend exists, exit with 0 (success!)
	if command -v "$BINARY" >/dev/null 2>&1; then
		return 0
	else
		# construct error message
		ERRMSG="exosearch requires '$BINARY', could not find that on your \$PATH"
		if [[ -n "$2" ]]; then
			ERRMSG="$ERRMSG. $2"
		fi
		printf '%s\n' "$ERRMSG" 1>&2
		return 1
	fi
}

declare OPEN_URL LINKS_SEARCH THIS_DIR
THIS_DIR="$(realpath "$(dirname "${BASH_SOURCE[0]}")")"
cd "$THIS_DIR" || {
	printf "Couldn't 'cd' to '%s'\n" "$THIS_DIR"
	exit 1
}

OPEN_URL=0
LINKS_SEARCH=0
while getopts "oh" opt; do
	case $opt in
	o)
		# searching for links should automatically open in browser
		OPEN_URL=1
		LINKS_SEARCH=1
		;;
	h)
		go run ./exosearch_cmd.go -help
		printf "\nThis wrapper script handles/wraps the 'internal' go flags\n"
		printf "Pass the -o flag to search for links instead\n"
		exit 0
		;;
	\?)
		echo "Invalid option provided. Run $0 -h for help" >&2
		exit 1
		;;
	*)
		echo "Unknown argument: $OPTARG" >&2
		exit 1
		;;
	esac
done

run_search() {
	local -a search_flags=()
	search_flags=(-exobrain-dir "$THIS_DIR")
	((LINKS_SEARCH)) && search_flags+=(-links -url)
	go run ./exosearch_cmd.go "${search_flags[@]}"
	return $?
}

if ((OPEN_URL)); then
	# my cross-platform open url/clipboard/notification scripts
	# https://github.com/seanbreckenridge/core
	# https://sean.fish/d/clp-args?dark
	HAS_SCRIPTS=1
	havecmd openurl && havecmd clp-args && havecmd notify || {
		HAS_SCRIPTS=0
	}
	URLS="$(run_search)" || exit $?
	[[ -z "$URLS" ]] && exit 1
	if ((HAS_SCRIPTS)); then # if my personal scripts are available, use those
		# if two lines, copy the first and open the second
		if [[ "$(wc -l <<<"$URLS")" == 2 ]]; then
			SITE_URL="$(head -n1 <<<"$URLS" | tr -d '\n')"
			REMOTE_EXOBRAIN_URL="$(tail -n1 <<<"$URLS")"
			# if there was no site URL (no URL was parsed)
			# default to the remote exobrain URL; copy
			# that to my clipboard instead
			if [[ -z "$SITE_URL" ]]; then
				SITE_URL="$REMOTE_EXOBRAIN_URL"
			fi
			APP='exobrain' clp-args "$SITE_URL" >/dev/null
			openurl <<<"$REMOTE_EXOBRAIN_URL"
		else
			printf '%s' "$URLS" | clipcopy
			printf '%s' "$URLS" | openurl
		fi
	else
		# else just print the results from the search
		echo "$URLS"
	fi
else
	run_search || exit $?
fi
