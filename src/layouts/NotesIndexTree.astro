---
import Base from './Base.astro';
import { type CollectionEntry } from 'astro:content';
import { createTree, walkTree } from "../helpers/tree";
import url_for from '../helpers/url';

type Post = CollectionEntry<'notes'>;

type Props = {
	title: string;
	description: string;
	posts: Post[];
};

const { title, posts, description } = Astro.props;
const lines = walkTree(createTree(posts));
---

<Base title={title} description={description}>
	<style>
		ul {
			display: flex;
			flex-wrap: wrap;
			flex-direction: column;
			gap: 0.25rem;
			list-style-type: none;
			margin: 0;
			padding: 0;
		}
		ul li * {
			text-decoration: none;
			transition: 0.2s ease;
			}
		.icon-container {
			display: flex;
			flex-direction: row;
		}
		.icon-container svg {
			margin-right: 0.5rem;
			vertical-align: middle;
		}
	</style>
	<section>
		<ul>
			{lines.map((line, index) => (
				<li>
					{line.data ? (
							<h4 class="title">
								{line.text}
								<a href={url_for(`notes/${line.data.slug}/`)}>
									{line.name}
								</a>
							</h4>
					) : (
						<div class="icon-container">
						<span>{(index === 0) && <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M5 19l2.757 -7.351a1 1 0 0 1 .936 -.649h12.307a1 1 0 0 1 .986 1.164l-.996 5.211a2 2 0 0 1 -1.964 1.625h-14.026a2 2 0 0 1 -2 -2v-11a2 2 0 0 1 2 -2h4l3 3h7a2 2 0 0 1 2 2v2" /></svg>}</span>
						<h4 class="title">{line.text}</h4>
						</div>
					)}
				</li>
			))}
		</ul>
	</section>
</Base>
